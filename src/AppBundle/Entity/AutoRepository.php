<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * AlquilerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AutoRepository extends EntityRepository
{
    public function getAutoData($id)
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery(
            'SELECT a, t FROM AppBundle:Auto a ' .
            'JOIN a.transmision t ' .
            'WHERE a.id = :id '
        )->setParameter('id', $id);

        return $query->getSingleResult();
    }

    public function getAutoRates($locale)
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery(
            'SELECT a, oa, o,tr, t FROM AppBundle:Auto a ' .
            'JOIN a.ofertaAutos oa ' .
            'JOIN oa.oferta o ' .
            'JOIN o.translations tr' .
            'JOIN o.tipo t ' .
            'WHERE o.id = 1 '.
            'AND tr.locale = :locale '
        )->setParameter('locale', $locale);

        return $query->getResult();
    }

    public function getAutoOfertas($id)
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery(
            'SELECT a, oa, o, t FROM AppBundle:Auto a ' .
            'JOIN a.ofertaAutos oa ' .
            'JOIN oa.oferta o ' .
            'JOIN o.tipo t ' .
            'WHERE a.id = :id '
        )->setParameter('id', $id);

        return $query->getSingleResult();
    }

    public function getAutoOfertaCodigos($tipo){
        $em = $this->getEntityManager();
        $em->createQueryBuilder('auto')
            ->select('auto, transmision','translation','ofertaAutos','oferta')
            ->innerJoin('auto.transmision','transmision')
            ->innerJoin('transmision.translations','translation')
            ->innerJoin('auto.ofertaAutos','ofertaAutos')
            ->innerJoin('ofertaAutos.oferta', 'oferta')
            ->innerJoin('oferta.tipo','tipo');
    }

    public function getAutoCodigos($id = null, $code = null){
        if($id == null && $code == null){
            return $this->getAutoCodigosPrioridad();
        }else{
            return $this->getAutoCodigosDirigido($id,$code);
        }
    }

    private function getAutoCodigosPrioridad(){

        $em = $this->getEntityManager();

        $rsm = new ResultSetMapping();

        $rsm->addScalarResult('id', 'id');
        $rsm->addScalarResult('codigo', 'codigo');

        $query = $em->createNativeQuery(
            "SELECT
                a.id,
                o.codigo
            FROM
                auto a
            INNER JOIN oferta_auto oa ON oa.id_auto = a.id
            INNER JOIN oferta o ON o.id = oa.id_oferta
            INNER JOIN oferta_tipo t ON t.id = o.id_tipo
            INNER JOIN (
                SELECT
                    a.id,
                    max(t.prioridad) as prioridad
                FROM
                    auto a
                INNER JOIN oferta_auto oa ON oa.id_auto = a.id
                INNER JOIN oferta o ON o.id = oa.id_oferta
                INNER JOIN oferta_tipo t ON t.id = o.id_tipo
                GROUP BY a.id
            ) tt ON tt.id = a.id
            WHERE t.prioridad = tt.prioridad"
            , $rsm);

        $result = $query->getResult();

        return $result;
    }

    private function getAutoCodigosDirigido($id,$code){

        $em = $this->getEntityManager();

        $rsm = new ResultSetMapping();

        $rsm->addScalarResult('id', 'id');
        $rsm->addScalarResult('codigo', 'codigo');

        $query = $em->createNativeQuery(
            "SELECT
                a.id,
                o.codigo
            FROM
                auto a
            INNER JOIN oferta_auto oa ON oa.id_auto = a.id
            INNER JOIN oferta o ON o.id = oa.id_oferta
            WHERE a.id = :id AND o.codigo = :codigo
            UNION ALL
            SELECT
                a.id,
                o.codigo
            FROM
                auto a
            INNER JOIN oferta_auto oa ON oa.id_auto = a.id
            INNER JOIN oferta o ON o.id = oa.id_oferta
            INNER JOIN oferta_tipo t ON t.id = o.id_tipo
            INNER JOIN (
                SELECT
                    a.id,
                    max(t.prioridad) as prioridad
                FROM
                    auto a
                INNER JOIN oferta_auto oa ON oa.id_auto = a.id
                INNER JOIN oferta o ON o.id = oa.id_oferta
                INNER JOIN oferta_tipo t ON t.id = o.id_tipo
                GROUP BY a.id
            ) tt ON tt.id = a.id
            WHERE a.id <> :id AND t.prioridad = tt.prioridad"
            , $rsm)
            ->setParameter('id', $id)
            ->setParameter('codigo', $code);

        $result = $query->getResult();

        return $result;
    }

}